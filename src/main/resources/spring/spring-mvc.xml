<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd">

	<mvc:annotation-driven />
	<!-- 配置哪些是静态资源，缺省Servlet 直接返回 -->
	<mvc:resources mapping="/static/**" location="/static/" cache-period="31556926" />

	<context:component-scan base-package="com.xh.aop.log.controller" />

	<!-- 配置结果页面 前缀和后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- FastJson注入 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
			<!-- FastJson -->
			<bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>


	<!-- <aop:pointcut expression="@annotation(com.xh.aop.log.common.annotation.Validate)" id="validateCut" /> -->

	<!-- Controller是归mvc层管理的,按照原来的方法,根本拦截不到controller的方法，所以只有写到Controller里才能使用aop拦截 -->
	<aop:config>
		<aop:aspect id="aopAspect1" ref="logAspect" order="1">
			<aop:pointcut id="aspectAop" expression="execution(* com.xh.aop.log.controller..*.*(..))" />
			<aop:before pointcut-ref="aspectAop" method="before" />
			<aop:after pointcut-ref="aspectAop" method="after" />
			<aop:after-returning pointcut-ref="aspectAop" method="afterReturning" returning="returnValue" />
			<aop:around pointcut-ref="aspectAop" method="around" />
			<aop:after-throwing pointcut-ref="aspectAop" method="afterThrowing" throwing="exception" />
		</aop:aspect>
	</aop:config>


</beans>